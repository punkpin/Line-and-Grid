using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[System.Serializable]
public class functionInfo
{
    // Ax + By + C = 0
    public float A;
    public float B;
    public float C;
}


public class CustomsPass
{
    //模拟关卡数据，00000代表普通格子，00002代表方格，00003代表圆圈
    ///如果圆或方为负数代表有圆和方的属性但是不显示
    //数字按照特定编码 10000 代表数字类型1，数字大小0， -30003 代表数字类型3 数字大小 -3
    //其中,数字类型(看万位) 1代表白色 2代表黑色 3代表绿色 4代表红色 5为蓝色 6为橙色 7为紫色
    public static int[][][] customPassesStage1 = new int[10][][] //关卡主题一
    {
        new int[6][] //第一关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10003, 00000, 00000, 00000, 00000 },
            new int[6] { 00002, 00000, 00000, 00000, 00000, 00003 },
            new int[6] { 00000, 00000, 00000, 00000, 10003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第二关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00003 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10003, 00000, 00000, 10003, 00000 },
            new int[6] { 00000, 00000, 00002, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 10000, 00000 },
        },

        new int[6][] //第三关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10003, 00000, 00002, 00000, 00002 },
            new int[6] { 00000, 00000, 00000, 10004, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00003, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第四关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00003 },
            new int[6] { 00000, 00000, 10000, 00000, 00000, 00000 },
            new int[6] { 00000, 00002, 00000, 10004, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00002 },
            new int[6] { 00000, 00002, 00000, 00000, 10001, 00000 },
        },

        new int[6][] //第五关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00003, 10005, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00003, 10003, 00003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00002, 00000 },
            new int[6] { 00002, 00000, 10000, 00000, 00000, 00000 },
        },

        new int[6][] //第六关
        {
            new int[6] { 00000, 00000, 00000, 00000, 10002, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00002, 00003, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 10007, 00000, 00000, 10002 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00002, 00000, 10003, 00000, 00000, 00002 },
        },

        new int[6][] //第七关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00002, 00003, 00000, 00003, 00000, 00000 },
            new int[6] { 10003, 00000, 00000, 00000, 00000, 10002 },
            new int[6] { 00000, 00000, 00000, 10006, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00002, 00003, 00000 },
            new int[6] { 00000, 10002, 00002, 00000, 00000, 00000 },
        },

        new int[6][] //第八关
        {
            new int[6] { 00000, 00000, 00000, 00000, 10000, 00000 },
            new int[6] { 10003, 00000, 00003, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 10006, 00003, 00000, 00000 },
            new int[6] { 00000, 00003, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00002, 00002, 00000, 00002 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第九关
        {
            new int[6] { 00003, 00000, 00003, 00000, 00000, 00002 },
            new int[6] { 00000, 10006, 00000, 00002, 10003, 00000 },
            new int[6] { 00000, 00003, 00000, 00000, 00000, 00002 },
            new int[6] { 00000, 00000, 00000, 00003, 10004, 00000 },
            new int[6] { 10002, 00000, 00000, 00000, 00002, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第十关
        {
            new int[6] { 10003, 00003, 00000, 00000, 00002, 00000 },
            new int[6] { 00003, 00002, 00000, 10008, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 10004, 00000, 10003 },
            new int[6] { 00000, 00003, 00000, 00000, 00002, 00003 },
            new int[6] { 00000, 00000, 00000, 00000, 00003, 00000 },
        }
    }; //关卡主题一
    public static int[][][] customPassesStage2 = new int[10][][] //关卡主题二
    {
        new int[6][] //第一关
        {
            new int[6] { 00000, 00000, 00000, 00002, 00000, 00000 },
            new int[6] { 00000, 00000, 10003, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00002, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 20005, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00003, 00000, 00000 },
        },

        new int[6][] //第二关
        {
            new int[6] { 00000, 00000, 00000, 00002, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 10002 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10001, 00000, 20002, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00003, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第三关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00003 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 10003 },
            new int[6] { 00000, 00000, 20003, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 20001 },
            new int[6] { 00002, 00000, 10003, 00000, 00003, 00000 },
        },

        new int[6][] //第四关
        {
            new int[6] { 00002, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 20003, 00000, 00000, 00000, 20002 },
            new int[6] { 00002, 00000, 00000, 20001, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 10003, 00000, 00003, 00000, 00000, 10003 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第五关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 10003 },
            new int[6] { 00000, 20003, 00000, 00000, 00000, 00000 },
            new int[6] { 00002, 00000, 00000, -00003, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 20005, 40001, 00000 },
            new int[6] { 00000, 00000, 00000, 00003, 00000, 10000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第六关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 10003 },
            new int[6] { 00000, 00000, 00000, 10006, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 40001, -00003 },
            new int[6] { 20001, 00000, 00000, 20005, 20007, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00002, 40002 },
            new int[6] { 00002, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第七关
        {
            new int[6] { 20001, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 20000, 00000 },
            new int[6] { 20003, 00000, 00000, 00000, 00003, 00000 },
            new int[6] { 00000, 10003, 00000, 30001, 00000, 00000 },
            new int[6] { 00000, 30001, -00002, 00000, 00000, 20001 },
        },

        new int[6][] //第八关
        {
            new int[6] { 00000, 00000, 00000, 00000, 10002, -00002 },
            new int[6] { 00000, 00000, -30002, 00000, 30001, 00000 },
            new int[6] { 00000, 00000, 20005, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { -00003, 20001, -40001, 00000, 00000, 20001 },
        },

        new int[6][] //第九关
        {
            new int[6] { 00000, -30001, 00000, 00000, 00000, 10002 },
            new int[6] { 00000, 10002, 30001, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 40001, -00002, 00000, 00000 },
            new int[6] { 00000, -00003, 00000, 20002, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 20002, 40002, 00000, 00000, 00000 },
        },

        new int[6][] //第十关
        {
            new int[6] { 10002, 00000, 00000, 00000, 00000, 10003 },
            new int[6] { 00000, 00000, 30001, 20003, 00000, 00000 },
            new int[6] { -30001, 00000, -00002, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 40001, 10005, 00000 },
            new int[6] { 00000, 20004, 00000, 00000, -00003, 00000 },
            new int[6] { 00000, -40002, 00000, 00000, 00000, 00000 },
        }
    }; //关卡主题二
    
    public static int[][][] customPassesStage3 = new int[10][][] //关卡主题三
    {
        new int[6][] //第一关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10003, 00000, 00000, 00000, 00000 },
            new int[6] { 00003, 00000, 00000, 00002, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 20005, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },
        new int[6][] //第二关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10001, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 10003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00003, 00000, 00000, 00000, 00002 },
        },

        new int[6][] //第三关
        {
            new int[6] { 00002, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 20001, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 10003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00003, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第四关
        {
            new int[6] { 00002, 00000, 00000, 00000, 00000, 20000 },
            new int[6] { 00000, 00000, 00000, 20003, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00003, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10007, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第五关
        {
            new int[6] { 00002, 00000, 00000, 20001, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 10005, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00003, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 20001, 00000, 00000, 00002 },
        },

        new int[6][] //第六关
        {
            new int[6] { 00002, 00000, 00000, 00000, 00000, 00002 },
            new int[6] { 00000, 00000, 20001, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 10003 },
            new int[6] { 00000, 10002, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00003, 00000, 00000, 00003 },
        },

        new int[6][] //第七关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00002, 00000, 00000, 10004, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00003 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 20002, 00000, 00000, 00000 },
        },

        new int[6][] //第八关
        {
            new int[6] { 00002, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 10003, 00000, 00000, 00003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 20003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第九关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00003, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00002, 10006, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00002, 00000, 20002 },
            new int[6] { 00000, 00000, 00000, 00000, 00003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第十关
        {
            new int[6] { 00003, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 10006, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00002, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 10004, 00000 },
        },
    }; //关卡主题三

    public static functionInfo[] functionInfos =
    {
        new functionInfo {A = 1, B = 0, C = -2.5f },
        new functionInfo {A = 1, B = 0, C = -2.5f },
        new functionInfo {A = 0, B = 1, C = -2.5f },
        new functionInfo {A = 0, B = 1, C = -1.5f },
        new functionInfo {A = -1, B = 1, C = 0 },
        new functionInfo {A = 1, B = 0, C = -3.5f},
        new functionInfo {A = -1, B = 1, C = 2f },
    };//主题三对称函数
    public static int[][][] customPassesStage4 = new int[10][][] //关卡主题四
    {
        new int[6][] //第一关
        {
            new int[6] { 00000, 00000, 00002, 00000, -50005, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { -50001, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 10003, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00003, 00000, 00000 },
        },

        new int[6][] //第二关
        {
            new int[6] { 00000, 00000, 00000, 00002, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 50006, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 10003, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00003, 00000, 00000 },
        },

        new int[6][] //第三关
        {
            new int[6] { 00000, 00000, 00000, 00002, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00003, 20005, 00000, 50006, 00000 },
            new int[6] { 00000, 00000, 00003, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 50002, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第四关
        {
            new int[6] { 20001, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00003, 00000 },
            new int[6] { 00000, 00000, 10004, 00000, 00002, 00000 },
            new int[6] { 00000, 00000, 50000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00002, 00000, 00000 },
            new int[6] { 50001, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第五关
        {
            new int[6] { 20002, 00000, 00000, 00000, -60002, 00000 },
            new int[6] { 00000, 00002, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 50002, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 60024, 00003 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第六关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 60010, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00002, 00000, 00000, 50001 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 50002, 00003, 00000, 00000, 20002 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第七关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00002, 10004 },
            new int[6] { 00000, 00000, 50000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00003, 50008, 00000, 00000, 60042, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第八关
        {
            new int[6] { 00000, 00000, 00000, 00000, -70002, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00002, 00000 },
            new int[6] { 00000, 00000, -50002, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, -70392, 00000 },
            new int[6] { 00003, 00000, 60003, 00000, 00000, 00000 },
        },

        new int[6][] //第九关
        {
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00002, 00000, 70796, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, -60002 },
            new int[6] { 00000, 20001, 00000, 00000, -70192, 00000 },
            new int[6] { 00003, 00000, 00000, 00000, 00000, 00000 },
        },

        new int[6][] //第十关
        {
            new int[6] { 00000, 00000, 00000, 00000, -50001, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, -70002 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
            new int[6] { 00000, 60024, 00002, 00000, 00000, 00000 },
            new int[6] { 00000, 700192, 00000, 00003, 60042, 00000 },
            new int[6] { 00000, 00000, 00000, 00000, 00000, 00000 },
        }
    }; //关卡主题四

    public static bool[][] passRecord = new bool[4][] //通关记录
    {
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
    };
    public static bool[][] prevPassRecord = new bool[4][] //上一次通关记录
    {
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
        new bool[10] {false,false,false,false,false,false,false,false,false,false },
    };

    public static List<List<int>> routeRecord = new List<List<int>> //路径记录
    {
        new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),
        new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),
        new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),
        new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),new List<int>(),

    };
}
